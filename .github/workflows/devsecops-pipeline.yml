name: DevSecOps Pipeline

on:
  push:
    branches: [ features ]
  pull_request:
    branches: [ features ]
  schedule:
    - cron: '0 0 * * *'  # Daily security scans

jobs:
  # Secret Scanning
  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  # SAST (Static Application Security Testing)
  sast:
    runs-on: ubuntu-latest
    needs: [secret-scan]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: features
      
      - name: Setup SonarCloud scanner
        uses: warchant/setup-sonar-scanner@v7
      
      - name: SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectKey=saadrehman171000_DevOps-Hub \
            -Dsonar.organization=saadrehman171000 \
            -Dsonar.sources=src \
            -Dsonar.tests=__tests__ \
            -Dsonar.test.inclusions=**/*.test.js,**/*.test.ts,**/*.spec.js,**/*.spec.ts \
            -Dsonar.exclusions=**/node_modules/**,**/coverage/**,**/build/**,**/dist/** \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.branch.name=features \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Dependency Scanning
  dependency-check:
    runs-on: ubuntu-latest
    needs: [secret-scan]
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Clean npm cache
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
      
      - name: Install dependencies
        run: npm install
      
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'DevOps-Hub'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired
            --suppression suppression.xml
            --exclude "**/node_modules/next/**"
            --exclude "**/*.exe"

  # Your existing test job with security tests
  test:
    runs-on: ubuntu-latest
    needs: [dependency-check]
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      NODE_OPTIONS: "--no-deprecation" # Suppress deprecation warnings
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev @testing-library/react@latest
          npm install --save-dev @testing-library/jest-dom@latest
        
      - name: Run Tests
        run: npm test
        
      - name: Run Security Tests
        run: |
          # Run security tests without global installation
          npx jest --testPathPattern=__tests__/security --silent
          
      - name: Generate Test Report
        run: |
          npx jest --json --outputFile=jest-results.json
          
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            jest-results.json
            coverage/

  # Enhanced security audit
  security-audit:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      
      # npm audit with detailed report
      - name: NPM Audit
        run: |
          npm audit --audit-level=low --json > npm-audit.json || true
          
      # Snyk security scan
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Container Security Scanning
  container-security:
    runs-on: ubuntu-latest
    needs: [security-audit]
    steps:
      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL'  # Only fail on CRITICAL vulnerabilities
          vuln-type: 'os,library'
          
      - name: Run Anchore Container Scan
        uses: anchore/scan-action@v3
        with:
          image: '${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:latest'
          fail-build: false
          severity-cutoff: critical

  # Infrastructure as Code Security
  iac-security:
    runs-on: ubuntu-latest
    needs: [docker, container-security]
    steps:
    
      - uses: actions/checkout@v3
      
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true
          
      - name: Run checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/
          framework: terraform

  # Enhanced Docker build with security features
  docker:
    name: Secure Docker Build and Push
    needs: [security-audit]
    runs-on: ubuntu-latest
    env:
      KINDE_ISSUER_URL: ${{ secrets.KINDE_ISSUER_URL }}
      KINDE_CLIENT_ID: ${{ secrets.KINDE_CLIENT_ID }}
      KINDE_CLIENT_SECRET: ${{ secrets.KINDE_CLIENT_SECRET }}
      KINDE_SITE_URL: ${{ secrets.KINDE_SITE_URL }}
      KINDE_POST_LOGOUT_REDIRECT_URL: ${{ secrets.KINDE_POST_LOGOUT_REDIRECT_URL }}
      KINDE_POST_LOGIN_REDIRECT_URL: ${{ secrets.KINDE_POST_LOGIN_REDIRECT_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Create .env file
        run: |
          cat << EOF > .env
          KINDE_ISSUER_URL=${{ secrets.KINDE_ISSUER_URL }}
          KINDE_CLIENT_ID=${{ secrets.KINDE_CLIENT_ID }}
          KINDE_CLIENT_SECRET=${{ secrets.KINDE_CLIENT_SECRET }}
          KINDE_SITE_URL=${{ secrets.KINDE_SITE_URL }}
          KINDE_POST_LOGOUT_REDIRECT_URL=${{ secrets.KINDE_POST_LOGOUT_REDIRECT_URL }}
          KINDE_POST_LOGIN_REDIRECT_URL=${{ secrets.KINDE_POST_LOGIN_REDIRECT_URL }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          DIRECT_URL=${{ secrets.DIRECT_URL }}
          EOF
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:latest
          build-args: |
            KINDE_ISSUER_URL=${{ secrets.KINDE_ISSUER_URL }}
            KINDE_CLIENT_ID=${{ secrets.KINDE_CLIENT_ID }}
            KINDE_CLIENT_SECRET=${{ secrets.KINDE_CLIENT_SECRET }}
            KINDE_SITE_URL=${{ secrets.KINDE_SITE_URL }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:buildcache,mode=max
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Enhanced notification with security status
  notify:
    runs-on: ubuntu-latest
    needs: [iac-security]
    steps:
      - name: Notify Slack with Security Status
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "DevSecOps Pipeline Complete for ${{ github.repository }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üõ°Ô∏è DevSecOps Pipeline Complete"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Security Scan Status:*\n‚úÖ Complete"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Vulnerability Status:*\n${{ job.status == 'success' && '‚úÖ No Critical Issues' || '‚ùå Issues Found' }}"
                    }
                  ]
                }
                # [Previous notification configuration remains the same]
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
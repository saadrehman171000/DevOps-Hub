name: DevSecOps Pipeline

on:
  push:
    branches: [ features ]
  pull_request:
    branches: [ features ]
  schedule:
    - cron: '0 0 * * *'  # Daily security scans

jobs:
  # Secret Scanning
  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  # SAST (Static Application Security Testing)
  sast:
    runs-on: ubuntu-latest
    needs: [secret-scan]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: features
      
      - name: Setup SonarCloud scanner
        uses: warchant/setup-sonar-scanner@v7
      
      - name: SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectKey=saadrehman171000_DevOps-Hub \
            -Dsonar.organization=saadrehman171000 \
            -Dsonar.sources=src \
            -Dsonar.tests=__tests__ \
            -Dsonar.test.inclusions=**/*.test.js,**/*.test.ts,**/*.spec.js,**/*.spec.ts \
            -Dsonar.exclusions=**/node_modules/**,**/coverage/**,**/build/**,**/dist/** \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.branch.name=features \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Dependency Scanning
  dependency-check:
    runs-on: ubuntu-latest
    needs: [sast]
    steps:
      - uses: actions/checkout@v3
      
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'DevOpsHub'
          path: '.'
          format: 'HTML'
          
      - name: Upload Dependency Check Results
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: reports

  # Your existing test job with security tests
  test:
    runs-on: ubuntu-latest
    needs: [dependency-check]
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - run: npm test
      # Add security testing
      - name: Run Security Tests
        run: |
          npm install jest-security-scanner
          npm run security-test

  # Enhanced security audit
  security-audit:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      
      # npm audit with detailed report
      - name: NPM Audit
        run: |
          npm audit --audit-level=low --json > npm-audit.json || true
          
      # Snyk security scan
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Container Security Scanning
  container-security:
    runs-on: ubuntu-latest
    needs: [security-audit]
    steps:
      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          
      - name: Run Anchore Container Scan
        uses: anchore/scan-action@v3
        with:
          image: '${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:latest'
          fail-build: true
          severity-cutoff: high

  # Infrastructure as Code Security
  iac-security:
    runs-on: ubuntu-latest
    needs: [docker, container-security]
    steps:
    
      - uses: actions/checkout@v3
      
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true
          
      - name: Run checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/
          framework: terraform

  # Enhanced Docker build with security features
  docker:
    name: Secure Docker Build and Push
    needs: [security-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # Add Docker security scanning
      - name: Docker security scan
        uses: docker/scan-action@v1
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/devopshub-web:latest
          
      # Your existing Docker build steps...
      # [Previous Docker build configuration remains the same]

  # Enhanced notification with security status
  notify:
    runs-on: ubuntu-latest
    needs: [iac-security]
    steps:
      - name: Notify Slack with Security Status
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "DevSecOps Pipeline Complete for ${{ github.repository }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üõ°Ô∏è DevSecOps Pipeline Complete"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Security Scan Status:*\n‚úÖ Complete"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Vulnerability Status:*\n${{ job.status == 'success' && '‚úÖ No Critical Issues' || '‚ùå Issues Found' }}"
                    }
                  ]
                }
                # [Previous notification configuration remains the same]
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
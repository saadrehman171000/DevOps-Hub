{"_id":"recma-stringify","_rev":"1-64066eb4f67b3be4e686564eacb7582b","name":"recma-stringify","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"recma-stringify","version":"1.0.0","keywords":["abstract","ast","compile","javascript","plugin","recma-plugin","recma","serialize","stringify","syntax","tree","unified"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"recma-stringify@1.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/mdx-js/recma","bugs":{"url":"https://github.com/mdx-js/recma/issues"},"dist":{"shasum":"54632030631e0c7546136ff9ef8fde8e7b44f130","tarball":"https://registry.npmjs.org/recma-stringify/-/recma-stringify-1.0.0.tgz","fileCount":8,"integrity":"sha512-cjwII1MdIIVloKvC9ErQ+OgAtwHBmcZ0Bg4ciz78FtbT8In39aAYbaA7zvxQ61xVMSPE8WxhLwLbhif4Js2C+g==","signatures":[{"sig":"MEUCIQCcSMFAOnQXyDXOExFdxSV7/Ki7ODdmYy9RXKlHuzmzmAIgMp5CW1MepHu26vYJARDSn1mICL7cl6BPasDQj9KsGEs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":12656},"type":"module","types":"./index.d.ts","exports":"./index.js","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"2f4b44ee0d3eec88122e51ae630c97b5a70d3a07","scripts":{},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/mdx-js/recma.git#main","type":"git"},"_npmVersion":"10.9.0","description":"recma plugin to serialize JavaScript","directories":{},"sideEffects":false,"_nodeVersion":"22.7.0","dependencies":{"vfile":"^6.0.0","unified":"^11.0.0","@types/estree":"^1.0.0","estree-util-to-js":"^2.0.0"},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/recma-stringify_1.0.0_1729251414302_0.9639499067688408","host":"s3://npm-registry-packages"}}},"time":{"created":"2024-10-18T11:36:54.301Z","modified":"2024-10-19T08:13:09.445Z","1.0.0":"2024-10-18T11:36:54.468Z"},"bugs":{"url":"https://github.com/mdx-js/recma/issues"},"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","homepage":"https://github.com/mdx-js/recma","keywords":["abstract","ast","compile","javascript","plugin","recma-plugin","recma","serialize","stringify","syntax","tree","unified"],"repository":{"url":"git+https://github.com/mdx-js/recma.git#main","type":"git"},"description":"recma plugin to serialize JavaScript","contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"maintainers":[{"email":"remcohaszing@gmail.com","name":"remcohaszing"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"timneutkens@icloud.com","name":"timneutkens"},{"email":"tituswormer@gmail.com","name":"wooorm"}],"readme":"# recma-stringify\n\n[![Build][badge-build-image]][badge-build-url]\n[![Coverage][badge-coverage-image]][badge-coverage-url]\n[![Downloads][badge-downloads-image]][badge-downloads-url]\n[![Size][badge-size-image]][badge-size-url]\n[![Sponsors][badge-sponsors-image]][badge-collective-url]\n[![Backers][badge-backers-image]][badge-collective-url]\n[![Chat][badge-chat-image]][badge-chat-url]\n\n**[recma][github-recma]** plugin to add support for serializing JavaScript.\n\n## Contents\n\n* [What is this?](#what-is-this)\n* [When should I use this?](#when-should-i-use-this)\n* [Install](#install)\n* [Use](#use)\n* [API](#api)\n  * [`unified().use(recmaStringify[, options])`](#unifieduserecmastringify-options)\n  * [`Options`](#options)\n* [Syntax](#syntax)\n* [Syntax tree](#syntax-tree)\n* [Types](#types)\n* [Compatibility](#compatibility)\n* [Security](#security)\n* [Contribute](#contribute)\n* [License](#license)\n\n## What is this?\n\nThis package is a [unified][github-unified] ([recma][github-recma]) plugin that\ndefines how to take a syntax tree as input and turn it into JavaScript.\nWhen it’s used,\nJavaScript is serialized as the final result.\n\nSee [the monorepo readme][github-recma] for info on what the recma ecosystem is.\n\n## When should I use this?\n\nThis plugin adds support to unified for serializing JavaScript.\nIf you also need to parse JavaScript,\nyou can alternatively use [`recma`][github-recma-core],\nwhich combines unified,\nthis plugin,\nand [`recma-parse`][github-recma-parse].\n\nIf you don’t use plugins and have access to the syntax tree,\nyou can directly use [`estree-util-to-js`][github-estree-util-to-js],\nwhich is used inside this plugin.\nrecma focusses on making it easier to transform code by abstracting such\ninternals away.\n\n## Install\n\nThis package is [ESM only][github-gist-esm].\nIn Node.js (version 16+),\ninstall with [npm][npm-install]:\n\n```sh\nnpm install recma-stringify\n```\n\nIn Deno with [`esm.sh`][esmsh]:\n\n```js\nimport recmaStringify from 'https://esm.sh/recma-stringify@1'\n```\n\nIn browsers with [`esm.sh`][esmsh]:\n\n```html\n<script type=\"module\">\n  import recmaStringify from 'https://esm.sh/recma-stringify@1?bundle'\n</script>\n```\n\n## Use\n\nSay we have the following module `example.js`:\n\n```js\nimport recmaJsx from 'recma-jsx'\nimport recmaStringify from 'recma-stringify'\nimport rehypeParse from 'rehype-parse'\nimport rehypeRecma from 'rehype-recma'\nimport {unified} from 'unified'\n\nconst file = await unified()\n  .use(rehypeParse, {fragment: true})\n  .use(rehypeRecma)\n  .use(recmaJsx)\n  .use(recmaStringify)\n  .process('<p>Hi!<h1>Hello!')\n\nconsole.log(String(file))\n```\n\n…running that with `node example.js` yields:\n\n```jsx\n<><p>{\"Hi!\"}</p><h1>{\"Hello!\"}</h1></>;\n```\n\n## API\n\nThis package exports no identifiers.\nThe default export is [`recmaStringify`][api-recma-stringify].\n\n### `unified().use(recmaStringify[, options])`\n\nPlugin to add support for serializing to JavaScript.\n\n###### Parameters\n\n* `options` ([`Options`][api-options], optional)\n  — configuration\n\n###### Returns\n\nNothing (`undefined`).\n\n### `Options`\n\nConfiguration (TypeScript type).\n\nSame as [`Options`][github-estree-util-to-js-options]\nfrom [`estree-util-to-js`][github-estree-util-to-js].\nPassing `filePath` is not supported as it is handled for you.\n\n## Syntax\n\nJS is serialized according to [ECMA-262][tc39-ecma-262],\nwhich is also followed by all browsers and engines such as Node.js.\n\n## Syntax tree\n\nThe syntax tree format used in recma is [esast][github-esast] and\n[estree][github-estree].\n\n## Types\n\nThis package is fully typed with [TypeScript][].\nIt exports the additional type\n[`Options`][api-options].\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with maintained\nversions of Node.js.\n\nWhen we cut a new major release,\nwe drop support for unmaintained versions of Node.\nThis means we try to keep the current release line,\n`recma-strignify@1`,\ncompatible with Node.js 16.\n\n## Security\n\nAs **recma** works on JS and evaluating JS is unsafe,\nuse of recma can also be unsafe.\nDo not evaluate unsafe code.\n\nUse of recma plugins could also open you up to other attacks.\nCarefully assess each plugin and the risks involved in using them.\n\nFor info on how to submit a report, see our [security policy][health-security].\n\n## Contribute\n\nSee [§ Contribute][mdxjs-contribute] on our site for ways to get started.\nSee [§ Support][mdxjs-support] for ways to get help.\n\nThis project has a [code of conduct][health-coc].\nBy interacting with this repository,\norganization,\nor community you agree to abide by its terms.\n\n## License\n\n[MIT][file-license] © [Titus Wormer][wooorm]\n\n<!-- Definitions -->\n\n[api-options]: #options\n\n[api-recma-stringify]: #unifieduserecmastringify-options\n\n[badge-backers-image]: https://opencollective.com/unified/backers/badge.svg\n\n[badge-build-image]: https://github.com/mdx-js/recma/actions/workflows/main.yml/badge.svg\n\n[badge-build-url]: https://github.com/mdx-js/recma/actions\n\n[badge-collective-url]: https://opencollective.com/unified\n\n[badge-coverage-image]: https://img.shields.io/codecov/c/github/mdx-js/recma.svg\n\n[badge-coverage-url]: https://codecov.io/github/mdx-js/recma\n\n[badge-downloads-image]: https://img.shields.io/npm/dm/recma-stringify.svg\n\n[badge-downloads-url]: https://www.npmjs.com/package/recma-stringify\n\n[badge-size-image]: https://img.shields.io/bundlejs/size/recma-stringify\n\n[badge-size-url]: https://bundlejs.com/?q=recma-stringify\n\n[badge-sponsors-image]: https://opencollective.com/unified/sponsors/badge.svg\n\n[badge-chat-image]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[badge-chat-url]: https://github.com/mdx-js/mdx/discussions\n\n[esmsh]: https://esm.sh\n\n[file-license]: license\n\n[github-esast]: https://github.com/syntax-tree/esast\n\n[github-estree-util-to-js]: https://github.com/syntax-tree/estree-util-to-js\n\n[github-estree-util-to-js-options]: https://github.com/syntax-tree/estree-util-to-js#options\n\n[github-estree]: https://github.com/estree/estree\n\n[github-gist-esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\n\n[github-recma-core]: https://github.com/mdx-js/recma/tree/main/packages/recma\n\n[github-recma-parse]: https://github.com/mdx-js/recma/tree/main/packages/recma-parse\n\n[github-recma]: https://github.com/mdx-js/recma\n\n[github-unified]: https://github.com/unifiedjs/unified\n\n[health-coc]: https://github.com/mdx-js/.github/blob/main/code-of-conduct.md\n\n[health-security]: https://github.com/mdx-js/.github/blob/main/security.md\n\n[mdxjs-contribute]: https://mdxjs.com/community/contribute/\n\n[mdxjs-support]: https://mdxjs.com/community/support/\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[tc39-ecma-262]: https://tc39.es/ecma262/multipage/\n\n[typescript]: https://www.typescriptlang.org\n\n[wooorm]: https://wooorm.com\n","readmeFilename":"readme.md"}